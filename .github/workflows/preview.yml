name: Build and Deploy PR Previews

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
  pull_request_target:
    types: [closed]
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  deployments: write

jobs:
  # Build and deploy preview for PRs
  build-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Build site pages
        run: make all

      - name: Deploy to Surge.sh
        id: deploy
        run: |
          # Install Surge
          npm install -g surge
          
          # Set deployment domain
          DOMAIN="napari-hub-lite-pr-${{ github.event.number }}.surge.sh"
          
          # Deploy to Surge
          surge . $DOMAIN --token ${{ secrets.SURGE_TOKEN }}
          
          # Set output for comment
          echo "url=https://$DOMAIN" >> $GITHUB_OUTPUT
          echo "domain=$DOMAIN" >> $GITHUB_OUTPUT

      - name: Create deployment status
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployment } = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha,
              environment: 'preview',
              description: 'PR Preview Deployment',
              auto_merge: false,
              required_contexts: []
            });

            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              state: 'success',
              environment_url: '${{ steps.deploy.outputs.url }}',
              description: 'Preview deployment successful'
            });

      - name: Find existing comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- napari-hub-lite-preview-comment -->'

      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.number }}
          edit-mode: replace
          body: |
            <!-- napari-hub-lite-preview-comment -->
            ## ðŸš€ Preview Deployment

            **Preview URL:** ${{ steps.deploy.outputs.url }}

            The preview site has been deployed and is ready for review! 

            ### What's included:
            - âœ… Latest napari plugin data fetched from API
            - âœ… Static HTML files generated 
            - âœ… All plugin pages created
            - âœ… Search functionality available

            This preview will be automatically updated when you push new commits to this PR.

            ---
            *Preview deployed from commit ${{ github.event.pull_request.head.sha }}*

  # Cleanup when PR is closed
  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Surge deployment
        run: |
          # Install Surge
          npm install -g surge
          
          # Set domain to delete
          DOMAIN="napari-hub-lite-pr-${{ github.event.number }}.surge.sh"
          
          # Delete the deployment
          surge teardown $DOMAIN --token ${{ secrets.SURGE_TOKEN }} || echo "Deployment may not exist or already deleted"

      - name: Update deployment status
        uses: actions/github-script@v7
        with:
          script: |
            // Get all deployments for this PR
            const deployments = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha,
              environment: 'preview'
            });

            // Mark deployments as inactive
            for (const deployment of deployments.data) {
              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id,
                state: 'inactive',
                description: 'PR closed - preview cleaned up'
              });
            }

      - name: Update PR comment
        uses: peter-evans/find-comment@v2
        id: find-cleanup-comment
        with:
          issue-number: ${{ github.event.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- napari-hub-lite-preview-comment -->'

      - name: Add cleanup message to comment
        if: steps.find-cleanup-comment.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-cleanup-comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            <!-- napari-hub-lite-preview-comment -->
            ## ðŸš€ Preview Deployment

            ~~**Preview URL:** napari-hub-lite-pr-${{ github.event.number }}.surge.sh~~

            **Status:** âœ… Cleaned up - PR has been closed and preview deployment removed.

            ---
            *Preview was deployed from commit ${{ github.event.pull_request.head.sha }}*

  